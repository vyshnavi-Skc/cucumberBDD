How to check if we have given the stepdef for all the steps:
1) right click on the project ->configure -> convert to cucumber project ->it will take long time to make every time
2) by default: it will run one by one and fail only once it reaches the steps whcih has no stepdef defined
to overcome this we have option dryrun, by which it will not run  it ensures that if we have the implementation

@cucumberOptions(plugin = {"usage"})
for reports

Rerun plugin: using it we can create the failed report file 
	need to create runner file and using@we will provide the path fo the failedscenarios.txt file (report file generated with rerun option)
	
	
	extend report in cucumber:
	we need 2 dependencies for using extend reports
	<!-- https://mvnrepository.com/artifact/com.aventstack/extentreports -->
	<dependency>
	    <groupId>com.aventstack</groupId>
	    <artifactId>extentreports</artifactId>
	    <version>5.0.9</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter -->
	<dependency>
	    <groupId>tech.grasshopper</groupId>
	    <artifactId>extentreports-cucumber7-adapter</artifactId>
	    <version>1.9.2</version>
	</dependency>
	We have selceted 1.9.2 which i most suitable with testng and selenium versions
	
	After this we need to include a plugin in runner class, and create the extent.properties file to specific properties for creating extent report
	Parameterisation
		at scenario elvel
			using examples or without it
		at step level
			Data tables -it is an object to store the value at the step level
				list of list  ->only values
				list of maps ->header and values
				
		Parameters  -we can have any type of parameters like int, string, float etc...
		regexoperation in generic way
		doc string-can we passed as an arguemnt but not at step level
	
	
	Tags at scenario level or feature level
	Feature level tag: all the scenarios in the feature will inherit this tag
	
	And or and not are like logical operators
				
	hooks in cucumber  is similar to the before and after annotations in testng selenium
	
	Passing data at scenario level
	Passing data at step level
	
	Passing the content and dynamic variable in the text and validating it
	
	Tags ->and or not
	hooks:
	Before scenario, before step level, Before feature level
	
	tagged hooks
	
	
	
	

